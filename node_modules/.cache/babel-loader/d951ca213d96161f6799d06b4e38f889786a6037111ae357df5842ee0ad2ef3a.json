{"ast":null,"code":"var _jsxFileName = \"/home/ren/random-quote/rq/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [quote, setQuote] = useState({\n    content: \"\",\n    author: \"\"\n  });\n  useEffect(() => {\n    const fetchQuote = async () => {\n      try {\n        const res = await fetch(\"https://api.quotable.io/quotes/random\");\n        if (!res.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await res.json();\n        setQuote({\n          content: data[0].content,\n          author: data[0].author\n        });\n        console.log(quote);\n      } catch (error) {\n        console.error(\"There was a problem with your fetch operation:\", error);\n      }\n    };\n    fetchQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"quote\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: quote.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: \"fa-solid fa-quote-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this), quote.author, /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: \"fa-solid fa-quote-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 72\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MBbIpcWu1iPg7jYr8cb50m50y10=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","quote","setQuote","content","author","fetchQuote","res","fetch","ok","Error","data","json","console","log","error","children","class","fileName","_jsxFileName","lineNumber","columnNumber","FontAwesomeIcon","icon","_c","$RefreshReg$"],"sources":["/home/ren/random-quote/rq/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [quote, setQuote] = useState({\n    content: \"\",\n    author: \"\"\n  });\n\n  useEffect(() => {\n    const fetchQuote = async () => {\n      try {\n        const res = await fetch(\"https://api.quotable.io/quotes/random\");\n        if (!res.ok) {\n          throw new Error('Network response was not ok'); \n        }\n        const data = await res.json();\n        setQuote({\n          content: data[0].content,\n          author: data[0].author\n        });\n        console.log(quote);\n      } catch (error) {\n        console.error(\"There was a problem with your fetch operation:\", error);\n      }\n    };\n\n    fetchQuote();\n  }, []);\n\n  return (\n    <main>\n  <div class=\"quote\">\n    <h3>{quote.content}</h3>\n    <h4><FontAwesomeIcon icon=\"fa-solid fa-quote-left\" />{quote.author}<FontAwesomeIcon icon=\"fa-solid fa-quote-left\" /></h4>\n  </div>\n</main>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IACjCQ,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFR,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QAChE,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7BT,QAAQ,CAAC;UACPC,OAAO,EAAEO,IAAI,CAAC,CAAC,CAAC,CAACP,OAAO;UACxBC,MAAM,EAAEM,IAAI,CAAC,CAAC,CAAC,CAACN;QAClB,CAAC,CAAC;QACFQ,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;MACpB,CAAC,CAAC,OAAOa,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACxE;IACF,CAAC;IAEDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAiB,QAAA,eACFjB,OAAA;MAAKkB,KAAK,EAAC,OAAO;MAAAD,QAAA,gBAChBjB,OAAA;QAAAiB,QAAA,EAAKd,KAAK,CAACE;MAAO;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBtB,OAAA;QAAAiB,QAAA,gBAAIjB,OAAA,CAACuB,eAAe;UAACC,IAAI,EAAC;QAAwB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAACnB,KAAK,CAACG,MAAM,eAACN,OAAA,CAACuB,eAAe;UAACC,IAAI,EAAC;QAAwB;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAGP;AAACpB,EAAA,CApCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}