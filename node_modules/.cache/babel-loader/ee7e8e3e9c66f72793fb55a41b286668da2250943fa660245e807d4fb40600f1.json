{"ast":null,"code":"var _jsxFileName = \"/home/ren/random-quote/rq/src/components/Main.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft, faQuoteRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [quote, setQuote] = React.useState({\n    content: \"\",\n    author: \"\"\n  });\n  React.useEffect(() => {\n    const fetchQuote = async () => {\n      try {\n        const res = await fetch(\"https://api.quotable.io/quotes/random\");\n        if (!res.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await res.json();\n        setQuote({\n          content: data[0].content,\n          author: data[0].author\n        });\n        console.log(quote);\n      } catch (error) {\n        console.error(\"There was a problem with your fetch operation:\", error);\n      }\n    };\n    fetchQuote();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"quote\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faQuoteLeft,\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), \" \", quote.content, \" \", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faQuoteRight,\n          size: \"sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 77\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"\\xA9\", quote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"5j1beOV3j3ATRK8uePQEXNrDKtw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","FontAwesomeIcon","faQuoteLeft","faQuoteRight","jsxDEV","_jsxDEV","Main","_s","quote","setQuote","useState","content","author","useEffect","fetchQuote","res","fetch","ok","Error","data","json","console","log","error","children","class","icon","size","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ren/random-quote/rq/src/components/Main.js"],"sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft, faQuoteRight } from '@fortawesome/free-solid-svg-icons';\n\nfunction Main(){\n    const [quote, setQuote] = React.useState({\n        content: \"\",\n        author: \"\"\n      });\n    \n      React.useEffect(() => {\n        const fetchQuote = async () => {\n          try {\n            const res = await fetch(\"https://api.quotable.io/quotes/random\");\n            if (!res.ok) {\n              throw new Error('Network response was not ok'); \n            }\n            const data = await res.json();\n            setQuote({\n              content: data[0].content,\n              author: data[0].author\n            });\n            console.log(quote);\n          } catch (error) {\n            console.error(\"There was a problem with your fetch operation:\", error);\n          }\n        };\n    \n        fetchQuote();\n      }, []);\n    \n      return (\n        <main>\n      <div class=\"quote\">\n        <h3><FontAwesomeIcon icon={faQuoteLeft} size=\"sm\"/> {quote.content} <FontAwesomeIcon icon={faQuoteRight} size=\"sm\" /></h3>\n        <h4>&copy;{quote.author}</h4>\n            </div>\n    </main>\n    \n      );\n}\n\nexport default Main "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,WAAW,EAAEC,YAAY,QAAQ,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAAC;IACrCC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAE;EACV,CAAC,CAAC;EAEFZ,KAAK,CAACa,SAAS,CAAC,MAAM;IACpB,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QAChE,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;QAC7BX,QAAQ,CAAC;UACPE,OAAO,EAAEQ,IAAI,CAAC,CAAC,CAAC,CAACR,OAAO;UACxBC,MAAM,EAAEO,IAAI,CAAC,CAAC,CAAC,CAACP;QAClB,CAAC,CAAC;QACFS,OAAO,CAACC,GAAG,CAACd,KAAK,CAAC;MACpB,CAAC,CAAC,OAAOe,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACxE;IACF,CAAC;IAEDT,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAmB,QAAA,eACFnB,OAAA;MAAKoB,KAAK,EAAC,OAAO;MAAAD,QAAA,gBAChBnB,OAAA;QAAAmB,QAAA,gBAAInB,OAAA,CAACJ,eAAe;UAACyB,IAAI,EAAExB,WAAY;UAACyB,IAAI,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,KAAC,EAACvB,KAAK,CAACG,OAAO,EAAC,GAAC,eAAAN,OAAA,CAACJ,eAAe;UAACyB,IAAI,EAAEvB,YAAa;UAACwB,IAAI,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1H1B,OAAA;QAAAmB,QAAA,GAAI,MAAM,EAAChB,KAAK,CAACI,MAAM;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGX;AAACxB,EAAA,CApCQD,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAsCb,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}