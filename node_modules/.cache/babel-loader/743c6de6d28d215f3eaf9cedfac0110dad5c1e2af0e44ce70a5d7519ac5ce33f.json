{"ast":null,"code":"var _jsxFileName = \"/home/ren/random-quote/rq/src/components/Header.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [tempNoteText, setTempNoteText] = React.useState(\"\");\n  const [prompt, setPrompt] = React.useState(\"\");\n  function updateResults() {\n    fetch(`https://api.quotable.io/search/quotes?query=${encodeURIComponent(prompt)}&fields=content`).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      data.forEach(quote => {\n        console.log(quote.content);\n      });\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  }\n  React.useEffect(() => {\n    if (prompt) {\n      setTempNoteText(prompt);\n    }\n  }, [prompt]);\n  React.useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      if (tempNoteText !== prompt) {\n        updateResults(tempNoteText);\n      }\n    }, 500);\n    return () => clearTimeout(timeoutId);\n  }, [tempNoteText]);\n  function handleChange(event) {\n    const {\n      value\n    } = event.target;\n    setPrompt(value);\n    console.log(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: prompt,\n      name: \"prompt\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"2/y0ULRyQ7QJ/0lGYsZjWrl6mS8=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Header","_s","tempNoteText","setTempNoteText","useState","prompt","setPrompt","updateResults","fetch","encodeURIComponent","then","response","ok","Error","json","data","console","log","forEach","quote","content","catch","error","useEffect","timeoutId","setTimeout","clearTimeout","handleChange","event","value","target","children","type","placeholder","name","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ren/random-quote/rq/src/components/Header.js"],"sourcesContent":["import React from \"react\";\n\n\nexport default function Header() {\n    const [tempNoteText, setTempNoteText] = React.useState(\"\");\n    const [prompt, setPrompt] = React.useState(\"\");\n\n    function updateResults() {\n        fetch(`https://api.quotable.io/search/quotes?query=${encodeURIComponent(prompt)}&fields=content`)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(data => {\n                console.log(data);\n                data.forEach(quote => {\n                    console.log(quote.content);\n                });\n            })\n            .catch(error => {\n                console.error('There was a problem with your fetch operation:', error);\n            });\n    }\n\n    React.useEffect(() => {\n        if (prompt) {\n            setTempNoteText(prompt);\n        }\n    }, [prompt]);\n\n    React.useEffect(() => {\n        const timeoutId = setTimeout(() => {\n            if (tempNoteText !== prompt) {\n                updateResults(tempNoteText);\n            }\n        }, 500);\n        return () => clearTimeout(timeoutId);\n    }, [tempNoteText]);\n\n    function handleChange(event) {\n        const { value } = event.target;\n        setPrompt(value);\n        console.log(value);\n    }\n\n    return (\n        <nav>\n            <input type=\"text\" placeholder=\"Search...\" value={prompt} name=\"prompt\" onChange={handleChange} />\n        </nav>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,KAAK,CAACO,QAAQ,CAAC,EAAE,CAAC;EAE9C,SAASG,aAAaA,CAAA,EAAG;IACrBC,KAAK,CAAE,+CAA8CC,kBAAkB,CAACJ,MAAM,CAAE,iBAAgB,CAAC,CAC5FK,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACVC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBA,IAAI,CAACG,OAAO,CAACC,KAAK,IAAI;QAClBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAACC,OAAO,CAAC;MAC9B,CAAC,CAAC;IACN,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACZN,OAAO,CAACM,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IAC1E,CAAC,CAAC;EACV;EAEAzB,KAAK,CAAC0B,SAAS,CAAC,MAAM;IAClB,IAAIlB,MAAM,EAAE;MACRF,eAAe,CAACE,MAAM,CAAC;IAC3B;EACJ,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAEZR,KAAK,CAAC0B,SAAS,CAAC,MAAM;IAClB,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAM;MAC/B,IAAIvB,YAAY,KAAKG,MAAM,EAAE;QACzBE,aAAa,CAACL,YAAY,CAAC;MAC/B;IACJ,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAMwB,YAAY,CAACF,SAAS,CAAC;EACxC,CAAC,EAAE,CAACtB,YAAY,CAAC,CAAC;EAElB,SAASyB,YAAYA,CAACC,KAAK,EAAE;IACzB,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK,CAACE,MAAM;IAC9BxB,SAAS,CAACuB,KAAK,CAAC;IAChBb,OAAO,CAACC,GAAG,CAACY,KAAK,CAAC;EACtB;EAEA,oBACI9B,OAAA;IAAAgC,QAAA,eACIhC,OAAA;MAAOiC,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,WAAW;MAACJ,KAAK,EAAExB,MAAO;MAAC6B,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAER;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjG,CAAC;AAEd;AAACtC,EAAA,CAjDuBD,MAAM;AAAAwC,EAAA,GAANxC,MAAM;AAAA,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}